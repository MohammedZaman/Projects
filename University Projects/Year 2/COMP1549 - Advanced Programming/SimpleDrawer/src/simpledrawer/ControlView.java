/*
 * DrawerMain.java
 *
 * 
 * A very simple drawing program.
 *
 * The UI for the class has been created using NetBeans GUI Builder.  If you
 * wish to edit the parts generated by the form editor you have two choices:
 * 1) Use a text editor to remove the "editor" comments that NetBeans uses
 * to identify the parts that should not be edited.  This is a one way trip. 
 * Once you have done this you won't be able to use the NetBeans GUI editor 
 * any more for this class
 * 2) Work out how to use the "Code" feature on the property editor in NetBeans
 * to customise the generated code.  You can do most things by use of properties 
 * such as "Pre-Init Code" and "Post-Init Code"
 */
package simpledrawer;

import java.awt.Color;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class ControlView extends javax.swing.JFrame {

    private DrawingPanel drawingPanel; // the drawing panel

   
    private JLabel houseImg;
    private JLabel faceImg;
    
    /**
     * Initialise the components in the screen and then cast a reference to the
     * panel that will be drawn on so it can be used elsewhere.
     */
    public ControlView() {
       
        initComponents();
        drawingPanel = (DrawingPanel) panDrawingArea;
        ClockDial2.setVisible(false);
        btnRestart.setVisible(false);
        btnExit.setVisible(false);
        colorBean2.setCurrentColor(Color.BLACK);
        
        try {
            BufferedImage wPic = ImageIO.read(this.getClass().getResource("house.png"));
            BufferedImage fpic = ImageIO.read(this.getClass().getResource("face.png"));
            this.houseImg = new JLabel(new ImageIcon(wPic));
            this.faceImg = new JLabel(new ImageIcon(fpic));
            houseImg.setVisible(false);
            faceImg.setVisible(false);
    
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(ControlView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpShape = new javax.swing.ButtonGroup();
        panControls = new javax.swing.JPanel();
        colorBean2 = new ColorBean.ColorBean();
        panBrightness = new javax.swing.JPanel();
        panShape = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        radLine = new javax.swing.JRadioButton();
        radTriangle = new javax.swing.JRadioButton();
        radSquare = new javax.swing.JRadioButton();
        radOval = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        btnSetBg = new javax.swing.JButton();
        panThickness = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtThickness = new javax.swing.JTextField();
        lblNumOnly = new javax.swing.JLabel();
        panRotate = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnLeft = new javax.swing.JButton();
        btnRight = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        panButtons = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        panLoad = new javax.swing.JPanel();
        btnPlayGame = new javax.swing.JButton();
        btnRestart = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        Timer = new javax.swing.JPanel();
        ClockDial2 = new countdownclock.CountDown();
        panDrawingArea = new DrawingPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveJSONItem = new javax.swing.JMenuItem();
        loadJSONItem = new javax.swing.JMenuItem();
        menuExportPng = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple Draw");

        panControls.setPreferredSize(new java.awt.Dimension(350, 500));
        panControls.add(colorBean2);
        panControls.add(panBrightness);

        panShape.setPreferredSize(new java.awt.Dimension(357, 80));

        jPanel5.setPreferredSize(new java.awt.Dimension(300, 70));

        grpShape.add(radLine);
        radLine.setSelected(true);
        radLine.setText("Line");
        jPanel5.add(radLine);

        grpShape.add(radTriangle);
        radTriangle.setText("Triangle");
        radTriangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radTriangleradShapeActionPerformed(evt);
            }
        });
        jPanel5.add(radTriangle);

        grpShape.add(radSquare);
        radSquare.setText("Square");
        radSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radSquareradShapeActionPerformed(evt);
            }
        });
        jPanel5.add(radSquare);

        grpShape.add(radOval);
        radOval.setText("Oval");
        jPanel5.add(radOval);

        jButton1.setText("Reset");
        jPanel5.add(jButton1);

        btnSetBg.setText("Set Background");
        jPanel5.add(btnSetBg);

        panShape.add(jPanel5);

        panControls.add(panShape);

        panThickness.setPreferredSize(new java.awt.Dimension(360, 34));

        jLabel1.setText("Thickness");
        panThickness.add(jLabel1);

        txtThickness.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtThickness.setText("5");
        txtThickness.setPreferredSize(new java.awt.Dimension(50, 20));
        panThickness.add(txtThickness);
        panThickness.add(lblNumOnly);

        panControls.add(panThickness);

        jLabel2.setText("Rotate");
        panRotate.add(jLabel2);

        btnLeft.setText("Left");
        panRotate.add(btnLeft);

        btnRight.setText("Right");
        panRotate.add(btnRight);
        panRotate.add(jPanel2);

        panControls.add(panRotate);

        btnClear.setText("Clear");
        panButtons.add(btnClear);

        panControls.add(panButtons);

        btnPlayGame.setText("PlayGame");
        panLoad.add(btnPlayGame);

        btnRestart.setText("Restart");
        panLoad.add(btnRestart);

        btnExit.setText("Exit");
        panLoad.add(btnExit);

        panControls.add(panLoad);
        panControls.add(Timer);

        ClockDial2.setPreferredSize(new java.awt.Dimension(260, 255));
        panControls.add(ClockDial2);

        getContentPane().add(panControls, java.awt.BorderLayout.WEST);

        panDrawingArea.setBackground(new java.awt.Color(255, 255, 255));
        panDrawingArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panDrawingArea.setFocusCycleRoot(true);
        panDrawingArea.setPreferredSize(new java.awt.Dimension(600, 600));
        panDrawingArea.setLayout(new java.awt.BorderLayout());
        getContentPane().add(panDrawingArea, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        saveJSONItem.setText("Save JSON");
        saveJSONItem.setName(""); // NOI18N
        saveJSONItem.addActionListener(evt -> saveJson());
        jMenu1.add(saveJSONItem);

        loadJSONItem.setText("Load JSON");
        loadJSONItem.addActionListener(evt -> loadJSON());
        jMenu1.add(loadJSONItem);

        menuExportPng.setText("Export PNG");
        menuExportPng.addActionListener(evt -> exportPng());
        jMenu1.add(menuExportPng);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radSquareradShapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radSquareradShapeActionPerformed

    }//GEN-LAST:event_radSquareradShapeActionPerformed

    private void radTriangleradShapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radTriangleradShapeActionPerformed

    }//GEN-LAST:event_radTriangleradShapeActionPerformed

    
    
    public void saveJson(){
    JFrame parentFrame = new JFrame();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");

        int userSelection = fileChooser.showSaveDialog(parentFrame);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            JSONShapeReader Shape = new JSONShapeReader();
            Shape.JsonSave(fileChooser.getSelectedFile() + ".json", this.getDrawingPanel().getShapes());

        }
    } public void loadJSON(){
            JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "json", "json");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                JSONShapeReader shapeReader = new JSONShapeReader();
                shapeReader.storeShapes(chooser.getSelectedFile().getAbsolutePath());
                List listOfShapes = shapeReader.getSlList();
                this.getDrawingPanel().setShapes(listOfShapes);
                this.getDrawingPanel().repaint();
            } catch (Exception e) {

                JOptionPane.showMessageDialog(null,
                    "File is not in Correct Format",
                    "JSON Load",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
 }
    public void exportPng(){
    JFrame parentFrame = new JFrame();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");

        int userSelection = fileChooser.showSaveDialog(parentFrame);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            try {

                Rectangle rect = this.drawingPanel.getBounds();
                String format = "png";
                BufferedImage captureImage
                        = new BufferedImage(rect.width, rect.height,
                                BufferedImage.TYPE_INT_ARGB);
                this.drawingPanel.paint(captureImage.getGraphics());
                String fileName = fileChooser.getSelectedFile() + ".png";
                ImageIO.write(captureImage, format, new File(fileName));
            } catch (Exception e) {

                JOptionPane.showMessageDialog(null,
                        "error saving",
                        "Save PNG",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
 }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private countdownclock.CountDown ClockDial2;
    private javax.swing.JPanel Timer;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLeft;
    private javax.swing.JButton btnPlayGame;
    private javax.swing.JButton btnRestart;
    private javax.swing.JButton btnRight;
    private javax.swing.JButton btnSetBg;
    private ColorBean.ColorBean colorBean2;
    private javax.swing.ButtonGroup grpShape;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblNumOnly;
    private javax.swing.JMenuItem loadJSONItem;
    private javax.swing.JMenuItem menuExportPng;
    private javax.swing.JPanel panBrightness;
    private javax.swing.JPanel panButtons;
    private javax.swing.JPanel panControls;
    private javax.swing.JPanel panDrawingArea;
    private javax.swing.JPanel panLoad;
    private javax.swing.JPanel panRotate;
    private javax.swing.JPanel panShape;
    private javax.swing.JPanel panThickness;
    private javax.swing.JRadioButton radLine;
    private javax.swing.JRadioButton radOval;
    private javax.swing.JRadioButton radSquare;
    private javax.swing.JRadioButton radTriangle;
    private javax.swing.JMenuItem saveJSONItem;
    private javax.swing.JTextField txtThickness;
    // End of variables declaration//GEN-END:variables


   
public ColorBean.ColorBean getColorBean (){
    return  colorBean2;   
}
public countdownclock.CountDown getClockDial(){
    return ClockDial2;
}

//public void setClockDail(TestClock.ClockDial clock){
//    ClockDial2 = clock; 
//}

   public javax.swing.JLabel getLblNumOnly(){
       return lblNumOnly;
   }

    public DrawingPanel getDrawingPanel() {
        return drawingPanel;
    }



    public javax.swing.JButton getBtnClear() {
        return btnClear;
    }

    public javax.swing.JButton getBtnLeft() {
        return btnLeft;
    }

    public javax.swing.JButton getBtnLoadJSON() {
        return btnRestart;
    }

    public javax.swing.JButton getBtnLoadXML() {
        return btnPlayGame;
    }
    
      public javax.swing.JButton getBtnExit() {
        return btnExit;
    }
      
        public javax.swing.JButton getBtnRestart() {
        return btnRestart;
    }

        
      public javax.swing.JButton getBtnPlayGame() {
        return btnPlayGame;
    }
    public javax.swing.JButton getBtnRight() {
        return btnRight;
    }

    public javax.swing.JButton getBtnSetBg() {
        return btnSetBg;
    }

    public javax.swing.ButtonGroup getGrpShape() {
        return grpShape;
    }

    public javax.swing.JButton getjButton1() {
        return jButton1;
    }

    public javax.swing.JLabel getjLabel1() {
        return jLabel1;
    }

    public javax.swing.JLabel getjLabel2() {
        return jLabel2;
    }

    

    public javax.swing.JMenuBar getjMenuBar1() {
        return jMenuBar1;
    }

   

    public javax.swing.JPanel getjPanel2() {
        return jPanel2;
    }

    

   

    public javax.swing.JPanel getPanBrightness() {
        return panBrightness;
    }

    public javax.swing.JPanel getPanButtons() {
        return panButtons;
    }

    public javax.swing.JPanel getPanControls() {
        return panControls;
    }

    public javax.swing.JPanel getPanDrawingArea() {
        return panDrawingArea;
    }

   

    public javax.swing.JPanel getPanLoad() {
        return panLoad;
    }

    

    public javax.swing.JPanel getPanRotate() {
        return panRotate;
    }

    public javax.swing.JPanel getPanShape() {
        return panShape;
    }

    public javax.swing.JPanel getPanThickness() {
        return panThickness;
    }

    public javax.swing.JRadioButton getRadLine() {
        return radLine;
    }

    public javax.swing.JRadioButton getRadOval() {
        return radOval;
    }

    public javax.swing.JRadioButton getRadSquare() {
        return radSquare;
    }

    public javax.swing.JRadioButton getRadTriangle() {
        return radTriangle;
    }

 
    public javax.swing.JTextField getTxtThickness() {
        return txtThickness;
    }
   
     
   
    public JLabel getHouseImg() {
        return houseImg;
    }

    public JLabel getFaceImg() {
        return faceImg;
    }
     
  
     
    public void activateView(Controller myController) throws IOException {
        btnClear.addActionListener(myController);
        btnSetBg.addActionListener(myController);
        jButton1.addActionListener(myController);
        txtThickness.addFocusListener(myController);
        txtThickness.addActionListener(myController);
        txtThickness.addKeyListener(myController);
        btnLeft.addActionListener(myController);
        btnRight.addActionListener(myController);
        btnPlayGame.addActionListener(myController);
        btnExit.addActionListener(myController);
        btnRestart.addActionListener(myController);
        radLine.addActionListener(myController);
        radOval.addActionListener(myController);
        radTriangle.addActionListener(myController);
        radSquare.addActionListener(myController);
        colorBean2.addPropertyChangeListener(myController);
        
     
    
      
       
    }
}
